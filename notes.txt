# ideas come and go
# while writing, base and the structure
# problem is while writing more ideas without making the base is code becomes spagethii
# when an idea strikes write it in #ideas


:


complete python in 10 hours

we read faster than watching videos


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
21Jul22 1:14am

the init and the self

init method(function) is used to initiate objects
__init__ method is called every time a new object is created
init hold all the variables(attributes) used oop(by all the methods) simple.


self used to

# to append to a line A is used
# to reach the end of a line use $
# to switch panes in vs code use ctrl+1, ctrl+2, ctrl+2

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
23Jul22 11:43am

there are two types of variables in oops
1.class variables (explictly defined in class)
2.instance variables(self.var)

to use variables from other class we use inheritance
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
24Jul22 7:54pm

we can either use:
a=class()
b=class()
a.method()
b.method()


or 




__init__ gets called once for every object 
initialization

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
25Jul22 11:16
self is used to access the values
self.attribute1
self.attribute2

object is created in heap memory



constructor, self

different  object has a different memory allocation
each time you run the code, object gets assigned a new address





size of object:
depends on number of variables and size of each variables

constructor allocates the size of variables

self contains default values of variables 

self directs the pointer to the object itself 

The Default __init__ Constructor in C++ and Java. 
Constructors are used to initializing the object’s state. 
The task of constructors is to initialize(assign values)
to the data members of the class when an object of the 
class is created. Like methods, a constructor also contains 
a collection of statements(i.e. instructions) that are executed 
at the time of Object creation. 
It is run as soon as an object of a class is instantiated. 
The method is useful to do any initialization you want to do
with your object.


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
29Jul22 src kunal DSA


u for undo
ctrl+r for redo

a=10
a is refrence variable, stored in stack
10 is the objeect, stored in heap
variables in stack memory pointing to the object in heap memory
more than one refrence variable point to the same object

if any of the reference variables change the object 
the value is being changed for all the variable 

object with no refrence variable, gets removed from the memory
when garbage collection hits.
(garbage collection hits automatically) thats how python works 
______________________________________________________________________________
lect 3

java doesnt converts the code into machine code
instead it converts to byte code
byte code has extension .class

static variable is independent of the obkect of classes


how the java program gets executed:
(heirarcial order of the packages nested)
1.jdk: java development kit
       jdk = jre + dev_tools
       jdk is top level package
       it contains:
                a. development tools 
                b. jre
                c. jvac: a compiler
                d. jar: archiver, which packages all the code 
                e. javadoc: docs generator
                f. interprerter/loader

4.jre: java runtime enviorment
       jre = jvm + library_classes
3.jvm: java virtual machine
       contains jit in it (as it is a virtual machine)
4.jit: just in time


+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

30Jul22 src freecodecamp python oop

instance == obj

An instance is a specific representation of an object. 
An object is a generic thing while an instance is a single object
that has been created in memory. 
Usually an instance will have values assigned to it's properties 
that differentiates it from other instances of the type of object.

____________________________________________________________________________

                      VIM TIPS
https://web.stanford.edu/class/cs107/resources/vim

ctrl+/ to comment out code in any lang
$ for end of line
0 for begenning of line
  for going top of document
use e to go end of line 
use a to append, instead of i
shift+A for appendd


gg for going the start of document
G for for going to the end of document
42G jumps to the specified line:


To move extremely horizontally use:
    0: Moves to the first character of a line
    ^: Moves to the first non-blank character of a line
    $: Moves to the end of a line
    g_: Moves to the non-blank character at the end of a line



                     VIM MODES:

    Normal: for moving around a file and making edits
    Insert: for inserting text
    Visual (plain, line, or block): for selecting blocks of text
    ------------------------
    Command-mode: for running a command
    Replace: for replacing text

Normal: (esc)

Insert: (i)

Replace: R for replacing mode or r to replace a single char.

Visual: (v) 
       plain- (v)  highlights normally 
       line-  (shift+v) highlights line by line
       block- (ctrl+v) highlights block by block

Command-mode: (:)
    :q quit (close window)
    :w save (“write”)
    :wq save and quit
    :e {name of file} open file for editing
    :ls show open buffers
    :help {topic} open help
        :help :w opens help for the :w command
        :help w opens help for the w movement

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2Aug22 tmux, src yt

ctrl+a is the mode selector in tmux
ctrl+b 

ctrl+b
        % divides screen vertically half
        arrow keys switch focus
        " divides horizontally (shift+')

literally installed ohmytmux
now it literally even restores nvim

shift + r replaces text in vim, without entering insert mode




exit to exit the session of the terminal


just go ahead and try harder stuff


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Topic: tmux session
src: https://leimao.github.io/blog/Tmux-Tutorial/ (in read mode)

session(windows(panes))
tmux is a termianl manager which can be used in 
ssh commands

ctrl+b for running tmux commands
just press ctrl+b and press the rest of the buttons



two things : terminal and tmux console

to access tmux console: 
        ctrl+b :

create sessions:
        $tmux
        $tmux new
        $tmux new-session
        :new (ctrl+b+:)

detach sessions:
        ctrl+b+d (runs stuff in background)
        $exit (kills)

tmux session with name:
        tmux new-s [session-name]

view active session:
        $tmux ls
        $tmux list-sessions
        ctrl+b+s (esc/q to escape the info)

rename sessions:
        tmux rename-session [-t session-name][new-session-name]
        if [t-session] is not specified then the last active session is renamed
        ctrl+b+&

kill sessions:
        $tmux kill-server (kills all active sessions)
        $tmux kill-server -t[session-name] (kills the specific session)

attach tmux sessions (attaches the local terminak=l to the tmux session):
        $tmux attach -t[session name]


tmux session contains multiple windows:
        to create a window:
                ctrl+b+c 

        to kill a window:
                ctrl+b+$

        to kill a pane:
                ctrl+b+x

        to rename a window:
                ctrl+b+,

        to select a window:
                ctrl+b+(0,1,2,3,4) window id
                ctrl+b+p (previous window)
                ctrl+b+n (next window)

tmux windows contains panes:
        horizontal pane
                ctrl+b+% (divides into half)
                ctrl+b+" (divides vertically)

        close pane:
                ctrl+b+x

        resize pane:
                ctrl+arrow (hold control then resize with arrow keys)

restore session: (tmux resseruct extension)
        save session:
                ctrl+b + ctrl+s

        restore sesssion:
                ctrl+b + ctrl+r

move screen without moving cursor:
ctrl+E (down)
ctrl+Y (up)

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
31Aug22:
    -running two commands simultaneously
        use ; between two commands

     deciding between learning java and c
        treats:
            c: arduino, college, dsa
            java: Android dev, kotlin, backend
                        in demand
        
        gut feeling go java.
        go c, then java.


learning syntax:
    loops
    conditional statements


tmux session manager
Features

    prefix + s prompt for long session lists.
    
    prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
    Faster than the built-in prefix + s

    prefix + C (shift + c) - prompt for creating a new session by name.

    prefix + X (shift + x) - kill current session without detaching tmux.

    prefix + S (shift + s) - switches to the last session.
    The same as built-in prefix + L that everyone seems to override with some other binding.

    prefix + @ - promote current pane into a new session.
    Analogous to how prefix + ! breaks current pane to a new window.

    prefix + t<secondary-key> - join currently marked pane (prefix + m) to current session/window, and switch to it
        secondary-keys
            h, -, ": join horizontally
            v, |, %: join vertically
            f, @: join full screen

=================================================================================================================

jupyter notebook code:

#classes are custom datatypes
#creating a class for item in stores
class item:
        def (self,name,price,quantity):
                self.name = name
                self.price = price
                self.quant = quant
fruit = item()
fruit.name = apple
fruit.price = 10
fruit.quant = 12 
print(type(apple))



#swapping the values
a=69
b=42
print("og val of a,b resp",a,b)
a,b=b,a
print("swap val of a,b resp",a,b)



#swapping the values
a=69
b=42
print("og val of a,b resp",a,b)
a,b=b,a
print("swap val of a,b resp",a,b)


class Computer():
        def __init__(self):
                print("prints when called")
        def configs(self):
                print("fucking specs")
        
a=Computer()
b=Computer()

a.configs()
b.configs()

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
2Sept22
src java 4
in Java
-file name == public class name
-the best practice is to name the class with capital letter
-public class
Main function in Java is:
        ~public static void main(String[] args)

"int main in c is used as calling block 
code cant be used outside main or any other function
int main is the first function being executed, hence used to decalre the variables, 
called"
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
3Sep22

before pushing an existing ref to github, commit first,
i.e     git init    
        git add.
        git commit -m "initial commit"
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
4Sept22
src Java Book

file is compiled to byte code using javac compiler 
(javac==java compiler)
byte code is stored as .class file
byte code is secure and encrypted, 
cant be accsed from outside the compiler

compiling in Terminal:
        javac Main.java

compiled Java program is stored as
 Main.class or <filename>.class

running the compiled java file :
        java Main

running two commands at once:
        command1 ; command2
        (spacing doesnt matter)
        i.e:
        javac Main.java; java Main

L4 20:46 command line arguments:
        public class Main {
          public static void main(String[] args) { 
                // *String[] args takes command line argument 
            System.out.println("Hello World");
          }
        }
terminal:
>> javac Main lol, sus   //*here lol, sus are args

change location of class files formed:
>> javac .. 

for viewing git
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
12Sep22
src java Book

oops:
encapsulation
inheritance
polymorphism

public class Main {
  public static void main(String[] args) {
    System.out.println("Hello World");
  }
}

// String[] args is used to take command line arguments
// specifically args

// System.out.println  system - defines acess to System
                          out - prints out to the terminal

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
12Sep22
src: the heart, conscience
FUCK JAVA.
FUCK C.

LETS ROCK PYTHON
WE'RE BUILDING IT UP TO BRING IT BACK DOWN, BURN IT TO THE GROUND

already know python, revise that stuff
revise from learn python 'rat' textbook

Arduino:

declaring variables before void setup() makes it global variable

cat is used in terminal to display file contents in termianl
ls .. shows content of previous directory


inherit the upper level class by using it in the parameters

class pet();
        ssfwefw
        efwfewefwefw
        jif;wantwef
        khelp wp
class cat(pet):

ctrl + ~
opens up the terminal

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
15Sep22
src python oop basics video
python oops concepts:
encapsulation

@classmethod in python, it refrences the class itself
acceses the class attributes

@staticmethod in python 
print (f"hello world: {variable}")

if we havent assignerd the attribute yet we can pass in
extra attributes, by defining them outside the class block


using the attributes from the init by using the 

assert <attribute>:
checking the values are right type or value;

if the assertion is unfullfiled then 
the assertion error is printed


global attributes which can be accesed by all the objects 
are defined under class
e.g.
class stuff():
        price = 11

displaying/ acesing all the attributes of an object:
        <class_name>.__dict__

acesing all the attributes of an object 
        <object_name>.__dict__

it stores them in the form of a dictionary

csv- common seperated vlaue
used in python by using ; import csv

@classmethod does :
@staticmethod means

static method and class method differences


+++++++++++++++++++++++++++++++++++++++++++++
17Sep22:

>keep java and c on hold (till you get home).

> go bash and python, web nowwww

> contribute to git everyday...

> go out, explore....
+++++++++++++++++++++++++++++++++++++++++++++

AGAIN, FUCK JAVA AND C.
LEARN DSA IN PYTHON THEN TRANSITON...


oops and pointers

--------------------------
18Sep22:
src python ds

Big O notation:
1.keep fastest growing term 
2.drop the constants

e.g 
for code:
.........................
for i in range(0,n):
        print(i)
.........................
the time complexity is:
t=a*n+b

finding big O using the rules:
t=a*n+b  
> t=a*n (keep fastest growing term) 
> t=n (removing the constants)
hence, 
complexity = O(n)

for code:
.........................
for i in range(0,n):        
        for j in range(0,i):
                print()
.........................
the time complexity is:
t=a*n2+b

finding big O using the rules:
t=a*n2+b  
> t=a*n2 (keep fastest growing term) 
> t=n2 (removing the constants)
hence, 
complexity = O(n2)

Big O literally means big number of zeroes,
numbers so big that only the number matters 
only fastest growing term is considered
constants are dropped 
cause, nothing else matters.

bin search is a search operation which axts on a sorted list
goes to middle of list, agian and again till it finds the element

big O is considered in worst case scenario
+++++++++++++++++++++++++++++++++++++++++++++++++
19Sep22
did nothing
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
20Sep22

ctrl+b +c create new tmux window
ctrl+b +1,2,3 switch between windows

todo:
decorators in python 
complete 

static and dynamic array

static = constant size
kinda almost did nothin

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
21Sep22

gnome had login problems today, kinda took time to get fixed
solutions were is using the login terminal using ctrl+alt+f2 key
never use a weird ass user name.
resetting gdm didnt work, tried whole lotta times
resetting the .bashrc worked 
https://askubuntu.com/questions/509834/lock-screen-does-not-unlock-with-correct-password-gnome-and-ubuntu-14-04

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
22Sep22

finally, finally i got nbterm working
mistake i did was i forgot to add pip to $PATH
,did it by editing .bash_profile
export PATH="$HOME/.local/bin:$PATH"



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
23Sep22
src python ds

linear ds(array(static array, dynamic array))

python lists are dynamic list, they dont have linear lists

static array
python- 
java- NativeArray
cpp - NativeArray

dyanmic array:
pyhton- list
java- ArrayList
cpp- std::vector
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++=+++++++
25Sep22
back home

ctrl+b toggles the side bar in vscode

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
its been two days since ive touched my laptop
vacationing or staycationing hard maybe.
28Sep22

bash is a space sensetive language
doesnt work when operators and variables have space beetween them
foo/foobar  is used to decalare a temporary variable
foobar is used for name space for temp files
-------------------------
bash scripting 101:
#script:
foo=101
echo $foo

>$ accesses the variable value
>echo can print variable values or string statements

--------------------------
#if statement
if [ $foo -eq 69 ];

> -eq, -lt, -
> fi is used in if statement

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
30Sep22

lets start web dev,
web dev dayyyy

win+alt+arrow keys switch workspaces

making web dev directory, and a git repository on web

heres previous html notes

============================================================================================================================================================================================================
16Jul22

! mark inputs broiler plate code in vs code
{<!DOCTYPE html>} like that

alt plus up and down keys shift lines up and down

html is case insensetive language
emmet abbreviation
uses to code quick

...........................................................................................................................................................................................................
<! DOCTYPE html> //specifies that its html5 document

...........................................................................................................................................................................................................
<html>

...........................................................................................................................................................................................................
<head> //contains site metadata eg encoding used, 
        web browser, size of webpage window,
        (view port, initial zoom)

#actual code

<head>       
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
 
        <title>Document</title> //contains the website title
...........................................................................................................................................................................................................

<body> //actual body of html which contains text content
<h1> //different heading sizes <h2>, <h3>
<p> //paragraph
...........................................................................................................................................................................................................

lorem for generating dummy text content use:
<p>lorem20</p>
lorem generates random words to check content.
lorem20, lorem300, specifies how many random words to generate
type lorem10 then press tab at intellij
...........................................................................................................................................................................................................

empty tags:
<hr> makes lines
<br>

...........................................................................................................................................................................................................
 
html comments:
ctrl+/ ,comments lines in html
<!--html comments -->

============================================================================================================================================================================================================
30Sep22

before pushin repo to github, 
-initiate local git
-track all files of git , git add.
-make commit, 
-then push the repo

idea: Todo app using python and django framework

how to write better README.md
https://www.freecodecamp.org/news/how-to-write-a-good-readme-file/

new notes policy:
write initially in topic wise files, 
then conjoin/ append in the notes 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1Oct22
2Oct22
made readme files in github for some of my repository
took part in hacktober fest, planning to do opensource contributuons
chosing a repository
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

3Oct22
ctrl+w closes firefox tabs else than vim keybindings

if there is differnces between local and online repo then 
git pull --rebase origin main

6Oct22
web dev is boring, changing the approach
going to project based learning
pick a project, learn the stack to replicate it
: how about a resume website?
or, weather website?
or, online nvim editor?
or, youtube video transcript (subtitles) so you can read

image src and a herf tags are the basic tags for image and web links 
resp.
 
ctrl / comments out
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
7Oct22

fork and pull in github:
fork: copying someone's github repo to your own private repo
pull: providing your modification of repo, to the owner for merging it

src datascience roadmap vid:
        -need to learn ms excel for datascience
        -statistics: from khan academy, marin stats, statquest
        -numpy, pandas, data visualization, data cleaning
        -learn fortran, cobol
        -kagle datasets, exploratory data analysis
        -ml
        -deep learning
        -mongo db mysql
        -bi tools like tableau to visualize data

kill tmux server before making any changes to tmux config, to see changes

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Makrdown:
Apostrophe can export markdown to HTML, shows real time changes 
in markdown file

two enter keys strokes make make the newline in makrdown

**bold character**

*italic character*

HEAD  bigger heading
====

head smaller heading
----

Markdown used for easier writing HTML files (by converting html to markdown)

git pull --rebase origin main

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
12Oct22
JS, CSS, React rush.
13
implementing css:
        -inline: use "style" in every heading and paragraph i.e  
                 <h1 style='color:black;'Text text text</h1>
        -internal: add <style> tag in <head> for predefining style for elementi i.e
                   d1 
        -extenal: add <link> tag in <head> for executing css file placed somewhere

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
17Oct22
test prep for DSUC, DLD


DSUC SYALLABUS
5 short question
3 long question
Total 20 marks 

1.Infix prefix postfix conversion
2.Location of element in array of row and column major order
3.Stack push and pop ,
Circular queue basic operation

DSUC topics:
Index of arrays, importance of arrays

array operations:
        INSERTION
        SEARCH

Stack Push and pop
Stacks folllow LIFO principle:
        all addition and deletion takes plasce at the top of the Stack
        PUSH==add to top of stack
        POP==remove element from top of the stack
        Operations:
                Push=
                Pop=
                IsEmpty=
                IsFull=
                Peek=

first check overflow condition
if TOS = size - 1 // since the index starts from 0,1,2,3

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
18Oct22

href in html is used for -making links
<link>-linking external stylesheets 
<link, rel>- link rel relates the link 
e.g. <link rel ="stylesheet" href="cssfile.css">

<div> defines the division or section in html
        used as a container for html styled by inline css

https://www.w3schools.com/tags/tag_div.ASP

type tags directly use intellisense suggestions by tab

you can mix and match commands in vim i.e use db, d:delete, b:
ctrl+r for redo in vim 

you can bake all the javascript, css inside html, instead of making seperate files of it
(not suggested), <style> for css, and <script> for JS

javascript adds dynamicness to the page 

thinking of making better commit notes, in order to use them as an Index
better but less commits...?

use tab more often in Terminal

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
21Oct22

learning git branching and using it aswell

use file history for viewing git history

branching is done of entire repo, can't branch an individual file or folder(directory)


- git branch <branch name>  //creates a new branch
- git branch -a  //lists all branches in the repo
- git branch -d 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-javascript is syntatically similar to C++ or java wrt to colons, brackets and all
-javascript is scrpting lang, not compiled.

declaring javascript variables: let, const, var
e.g.
let x;
x = 11;

node js is used to execute js in server
,outside browser 
node js is better than php and asp, as it follows asynchronous
doesnt have a waiting phase
is memory efficient
like cpp for web dev, can also use python too as a server backend

django is future, Instagram, spotify, youtube is based off it.
Django has better performance... as its based on Model view template
supports multithreading, caching and is more scalable

TLDR~ Django better

how about making digital art using processing ide??
Processing ide

hello world !!! its 1001th line

( )makes cursor go to begenning and end of sentence 
0, $ for start abd end of line
A for appending in end
I for inserting in begenning

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Starting out DSA In cpp

database: ops in HDD like sql
data warehouse: management of huge amount of legacy data, 
                not used currently in main db
big data:

data structures are run on main memory aka RAM (tree,lists...)

ram is used in Stack and heap
Dynamic memory allocation,
how c uses ram?

js doesnt require semicolons after every line
but requires them if we have multiple commands in a same line 

js arrays: in square brackets
arr = [q,w,e,r,t,y]

tomorrow's task:
CWH  vid 1-10, easily
big O- notation, array, array operation
read written notes, then classes

pretty easy, pretty easy....

-----------------------------------------------

array topics:
        What is Array ?
        Why array ?
        Declaring Arrays
        Indexes in Array
        Accessing in array
        Initialisation in Arrays
        Implementation
        Arrays with Functions
        Different types of Arrays
        Maximum/Minimum in an Array
        Scopes in Array
        Linear Search
        Reverse an Array

What are arrays?
-array stores similar stuff
-array has contiguous memory location
-array are indexed

declaring array:
>>	int arr[size];
	cour<<arr[index];
	int arr[10]={1,2,3,4,5,6,7,8,9,0}

---------------------------------

ctrl c to kill a task on terminal

put the first element in the empty array
start iteration from 1, 

#python loop doesnt iterate the lower limit
for i in range(0,4);
it exludes the upper range

dont care about broiler plate in leetcode

its getting chaotic.


i fixed it. used a notebook, a physical notebook

ctrl + p =   file quick access

cpp form programiz.
        covering two or more a day, contains index of topics

cpp practicals:
        type modifier signed, unsigned
        Input Output, cout, cin, endl
        type conversion, string>>int, etc, std::stdoi,stdof...
        defining string

before pushing a new project to github, make initial commit, 
put stuff in staging area: git add. ; git commmit
you cant push a blank foler, it must contain some files...

to enter the broiler plate code, type the keyword,
type main

o- to enter code in new line

think of words not alphabets.

write bash script
write python script for 

declaring multiple variables

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
int a=1; b=11; c=11;

string namespace = 'sss'

cpp array =
datatype 

traversing an array:
        for(int i : array){
                //code
        }

an array cant be outputted once,
have to use loops to iterate and print

excuting cpp files in terminal:
>> g++ filename.cpp -o filename
>> ./filename

./ because filename is executable file

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
v is visual mode
V is visual line mode, selects one line at a time

o opens in new line in nivm

in switch case, every statement needs a break 

prefix + Ctrl+s == saves tmux enviotment by tmux resseruct
prefix + Ctrl+r == restores tmux enviotment

sizeof displays size in bytes

for jumping lines in vim use:
 10k or 10j, 
 instead of :10k, :10j

Shift+jI for insert begenning of line
Shift+A for insert end of line

o to insert in the new line
Shift+O to insert in previous new line

w is to select words,
to delete a word, use dw.
ctrl c to kill terminal process
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
goto in cpp:
        goto labelname;

        labelname;

---------------------------------
function:
        function block, here function is defined
        int main calling block
functions are required to be defined before the int main block
syntax:
        returntype function name(type name, type name){
                return (something)
        }

---------------------------------
types of function:
        -with parameter and return value
        -with parameter and no return value
        -without parameter and no return value
        -without parameter and with return value
classic permutation and combination


---------------------------------
funcntion overloading:
functions having same name 

types of function overloading:
        -different parameter(and return type)
        -different number of parameters

why function overloading? https://www.geeksforgeeks.org/advantages-and-disadvantages-of-function-overloading-in-cpp/
        -to increase code readibility, reusability
        -saves memory
        -faster execution
        -lets group similar functions that do stuff

function differing in return type cant be overloaded
        i.e   >> int fun();
                 foat fun(); // throws error, cant be overloaded


for function overloading 
        -function name must be same, 
        -must have different number 
        -or different datatype of input
        -output datatype must be same
        -function can have same return datatype
       
e.g. :       
        void printer(int a){
                cout<<a<<endl;
        }
or:
        void printer(float a){
                cout<<a<<endl;
        }
or:
        void printer(char a, int b){
                cout<<a<<endl;
        }

-----------------------------------
*overloaded function with same datatype parameter gives error*

default argument in functons:
        works when a function, misses parameters

storage class:
        -local variable, 
        -global variable,
        -static local variable, 
        -register variable, (discouraged)
        -thread local variable (multi threading)

src: programiz cpp

char datatype stores a single character

------------------------------------
default parameter in functions:
        >> int function(int a = 4, int b = 7)

once default parameter is defined, 
all subsequent parameters must have default values

Once we provide a default value for a parameter, 
all subsequent parameters must also have default values. 
For example,
        // Invalid
        >> void add(int a, int b = 3, int c, int d);

        // Invalid
        >> void add(int a, int b = 3, int c, int d = 4);

        // Valid
        >> void add(int a, int c, int b = 3, int d = 4);

------------------------------------
recursion: 
calling the function inside the function itself

>> int func(){
         func();
         }

{ pros and cons }
pros:
-recursion improves readability of code, makes it compact
-it is used in data structures like Graph, Tree traversal

cons:
-it takes more processor time (more cpu)
-takes more stack space (more ram)
-difficult to debug compared to iterative program
------------------------------------
return by refrence:
        evil stuff.
rules:
        -cant return constants
        -cant return local variables

------------------------------------
array:
What are arrays?
-array stores similar stuff
-array has contiguous memory location
-array are indexed

initialization:
        int arr[10]={0,1,2,3,4,5,6,7,8,9}
        int arr[]={0,1,2,3,4,5,6,7,8,9}
        char arr[]={q,w,e,r,t,y}

iteration: (also printing)

        more memory efficient:
             for (const int &i : array){
             }
        
        normal:
             for (int i : array){
             }


       classic:
             for (int i=1; i<5; i++){

             }

insering elements:
        int arr[10]={0,1,2,3,4,5,6,7,8,9}
        arr[3]=69

colons are used to seperate paremeters in for loop

// ctrl + enter enters a newline without getting insert mode
// ctrl + alt + n to run the program
sizeof() = finds size of array

-------------------------------------------
multidimensional arrays:

2D:
int arr[3][3]= {{1,2,3},{1,2,3}}
3D:
int arr[3][3][3]= {{1,2,3},{1,2,3},{1,2,3}}

input:
        int arr[r][c];
        for(int i=1; i<=row; i++){
                for(int j=1; i<=column; j++){
                        cin >> arr[r][c];           
                }               
        }

printing:

        int arr[r][c];
        for(int i=1; i<=row; i++){
                for(int j=1; i<=column; j++){
                        cout << "numbers[" << i << "][" << j << "]: " << numbers[i][j] << endl;
                }               
        }

passing array in function: 
(normal as you pass variables)
        1D:
        int func(int arr[10]){
        }

        2D:
        int func(int arr[2][3]){
        }

        3D:
        int func(int arr[2][3][4]){
        }

____________________________________________________________________________
String:
strings = array of characters

end of char has a null or /0;

types of str:
        -strings from stl library
        -c style strings
-----------------------------------
string object (stl library):

declaring:
        string str; // no size limit

input:
        getline(cin, str); // gets whole string

-----------------------------------
passing string to function: 

int func(string str){
        //code       
}

int func(char str[]){
        //code       
}
-----------------------------------

C style string:
declaring:
they can have size declared or not, no problems.
        char str[] = "HElllo world"
        char str[] = {'HElllo', 'world'}
        char str[2] = {'HElllo', 'world'}
        char str[3] = {'a','b','c'}

string input:
        //for the whole line 
        char str[10];
        cin.get()

        //for single char input
        char str[];
        cin >> str;

____________________________________________________________________________

struct:
-structured datatype, like a class
-when structure is created, no memory is allocated,
-struct itself is a custom datatype
-struct is a blueprint of a datatype
-----------------------------------
definition:
//structure declaration: outside 
struct Car{
        int hp = 669; // default value 
        int wheels {4}; //explicit default value
        char engine;
        int weight;
        double top_speed;
        }Porche, beamer, rari, lamb; //struct objects. 

//strucutre variables: declared in int main()
struct Car porche;

//access members of structure
porche.hp = 669;

//input struct datatypes:
cin >> porche.weight;

or
string input:
cin.get(porche.weight,);
-----------------------------------
passing struct object to funcntion:

void func(struct_name object_name){

}
e.g.
void func(car porche){

}
-----------------------------------
returning struct form function: object of struct

return object_name;

-----------------------------------
passing struct to funcntion:

void func(struct_name object_name){

} // struct has been declared.

-----------------------------------
input to struct:
cin >> object.prop 

-----------------------------------
printing struct:

cout << object.attribute

-----------------------------------
pointer to struct:
nothing different or special.

// declaring pointer 
>> struct_name *ptr_name, struct_object; 
   ptr_name = &struct_object; // assigning pointer

//does work
>> struct_name struct_object;
   struct_name* pointer_name;  // just like  
   pointer_name = object;

//doesnt work because pointer stores same datatype 
>> struct_name struct_object;
   int* pointer_name; 
   pointer_name = object;



-----------------------------------
enumeration:
-enum is a variant of struct.
-like structs; like python lists or dicctionary, key ane element pair.
-used to assign names to integral constants.
-enum consists of integral constants.
-enum can be used for switch statements.
-enum is indexed normally; indexes can be assigned.

e.g.
defining enum: like struct, outside the main.
>> enum enum_name{cons1, cons2, cons3 .....};

>>enum season {      // default index are 0, 1, 2, 3...
        summer,      // when index is not declared
        spring,
        winter,
        autumn,
};
};
int main(){
        enum season india; 
        enum season = summer;// object value must be from the enum, list.
      //enum season = 1: // error

}
also,

enum coin{head, tail} toss;

changing default value of enum;

>>enum season { //like python dict.
        summer = 0,
        spring = 9,
        winter = 7,
        autumn = 5,
enum variables are constants, cant be reassigned, just like python dicctionary.

____________________________________________________________________________

Pointers:
pointers are variables that store adress of variables.
instead of passing the varaible we pass the pointer.

why pointers?
-saves memory.
-reduces length and complexity of code.
-can return more than one value from a function.
-increses processing speed.

-----------------------------------
datatype of pointer must be of same datatype as object.
-----------------------------------
declaring:
&var is adress of variable
>> int *pointVar;

also:
>> int* pointVar; // preferred syntax.

also:
>> int* pointVar, Var;
// here pointVar is pointer, Var is a normal varaible

-----------------------------------
assigning pointer:

>> int var; // declaring int var
   int *pointvar; //declaring pointer var
   pointvar = &var; // assign adress
                   // &var is adress of var
   cout<<pointer;
-----------------------------------
pointer and array: 
-pointer points to first element of array by default.
-it points to a single element at a time. 

>> int arr[3];
   int *ptr;
   ptr = arr[0]; //same
   ptr = arr; // no & sign

        ptr = arr   ; same as arr[0]     
        ptr = arr +1; same as arr[1] 
        ptr = arr +2; same as arr[2] 
        ptr = arr +3; same as arr[3] 
        ptr = arr +4; same as arr[4] 

shift + r replaces text in vim, without getting in insert mode. 

array name as pointer
inputting elements in an array: 
cin >> *(arr + i) ;

-----------------------------------
calling function using pointer: // pass by refernce
instead of passing variable, we pass the variable.

e.g:
>> void func(int &ref)
   //pointers take same

we can pass by refrence:
        -with without 
        -without pointers.


// passing by refernce with or without using pointers.

#include<iostream>
using namespace std;
void swap(int &a, int &b){ //passing address of variables
        int temp; //declaring temp var
        temp = a;
        a = b;
        b = temp;
}
void swap_ptr(int* a, int* b){ //has pointer as parameter
        int temp; //declaring temp var
        temp = *a;
        *a = *b;
        *b = temp;
}

int main(){
        int a = 1, b = 2; //declaring two var at once
        cout << "before swapping" << endl;
        cout << " a = " << a <<endl;
        cout << " b = " << b <<endl;

        swap(a,b); //swap using address of var 
        
        cout << "after swapping" << endl;
        cout << " a = " << a <<endl;
        cout << " b = " << b <<endl;

        cout << "_____________________" <<endl;
        
        cout << "before swapping" << endl;
        cout << " a = " << a <<endl;
        cout << " b = " << b <<endl;
        
        swap_ptr(&a,&b); // swap using pointers

        cout << "after swapping" << endl;
        cout << " a = " << a <<endl;
        cout << " b = " << b <<endl;

        return 0;
}
____________________________________________________________________________
memory management in cpp:
new, delete operator

dynamic memory allocation:
cpp lets us to allocate memory of a variable in run time

in case of other languages, java, python memory is allocated
and managed automatically, all using compiler.

but we have to do this manually in cpp
in cpp we need to deallocate the memory of unused variable, manually
(no garbage collection.)

we allocate and deallocate memory using new and delete operators. resp.

-----------------------------------
new:
new operator allocates memory to variable.

implementing:
>> int* pointVar; //declaring pointer
   //dynamically allocate memory using new
   //pointVar is assigned to newly allocated memory
   pointVar = new int;

-----------------------------------
delete:
delete the dynamically allocated memory, when the variable is unused.
i.e. delete allocated memory after the variable is used.

syntax:
>> delete var;






delete:
new and delete operators work with arrays too.


-----------------------------------

____________________________________________________________________________
OOPs oops oop:

oop topics:
        -class and objects
        -class methods, members
        -constructors
        -access specifiers (public, private)
        ----------------
        -inheritance
        -polymorphism
        -files
        -exceptions



objects are created to wrap or bundle similar function and variable, to make code consise

-----------------------------------
class cars{     //defining class cars
     public:
        string porche; // objects inside class cars
        string lamb;
        string rari;
        string beamer;
}

cpp class:
-class contains data and functions.
-class is a blueprint for object.
e.g.

class class_name{
        public: // access modifier
                datatype member; // methods
                datatype member; // members are variables used within the class
                datatype member;

                datatype method_name(){ // attributes
                }
                datatype method_name(){ // methods / member funcitons   
                }
}; // classes and struct 

defining cpp object:
>> class_name object_name;
>> animal dog; // animal class

-class needs access modifiers defined (public/ private), 
else it wont work.
-class is a specification for object 
/ is a custom datatype template instead of data.
-no storage is allocated when class is defined.
-storage is defined when an object is defined.

-----------------------------------
Class Methods:
class methods can be defined both inside and outside the 
class defenition.

inside class:
class class_name{
        void method_name(){
        };
  };

outside class:
class defined outside the class needs to be declared in the class

class class_name(){
        public:
                void method_name(); // declaring 
}

void class_name::method_name(){
};

-----------------------------------
Access modifiers:
public:
-accessed anywhere from the program
private:
-can be accesed only within the class
protected:


-----------------------------------
Constructor:  (__init__ in python)
-is the first method to be executed whenever an object is declared.
-is always public.
-purpose is to construct an object and assign values to object’s member
-usually used to cout some values or declare some variables.

constructor definition:
        class MyClass{
                public: 
                        MyConst(){}
        }

types of Constructor:
        -default
        -with parameter
        -copy


?? is it good practice to declare constructors, and structs outside the class definition
// MyClass, MyConst == same as class name etc. 

cosntructor is also used in inititate objects.

copy cosntructor: copies data of one object to another.

class area {
        rectangle (double len, double bre){
                length = len;
                breadth = bre;
        }
        rectangle(rectangle &obj){
                length = obj.length;
                breadth = obj.breadth;
        }
};
-----------------------------------
objects and function:

//passing objects to function in cpp:
void func(class obj1, class obj2){
        sum  = obj1 + obj2
}

//return objects to function in cpp:
class_name function(){
        return obj;
}
int main(){
        class_name obj; // defining object
        obj = function; // calling function

}
-----------------------------------
Operator overloading: (overloading literal fucntions like //, ++, -- etc and using methods)
syntax:
returnType operator(++, -- etc) symbol (arguments){
}

we can overload binary and unary functions

-----------------------------------
construtors can be overloaded like functions:
can have same funcitons, as long as parameters are samb;

by this we can call the 
____________________________________________________________________________
inheritance cpp:
class and their property can be inherited

syntax:
class parent{
        //properties
}
class Child : public Parent { //public can be replced with private or protected
        // attr. else than parent class
}


multilevel inheritance:

friend classes and functons

virtual functions

____________________________________________________________________________
access modifier: can be used with class, methods, etc.
public
private
protected: can only be accesed by child/ derived class


write code for all of them
____________________________________________________________________________
Tree datastructure:
terminology:
node
edge
leaf

height of node
depth of node

height of tree
degree of tree
forest

implement everything in code dat
implement link list in cpp. 
implement binary tree traversal in cpp.


fuck it its the implementation day:
link list

left out topics.
avl tree rotations
b, b+ tree complete
  // Assign value values
  one->value = 1;
  two->value = 2;
  three->value = 3;

  // Connect nodes
  one->next = two;
  two->next = three;
  three->next = NULL;



____________________________________________________________________________
https://www.freecodecamp.org/news/how-to-search-for-files-from-the-linux-command-line/

to find file in terminal:
>> find . -type f -name style*

find files by extension:
>> find . -type f -name *.cpp

f - regular file
d - directory
l - link

b - block device
c - character device



____________________________________________________________________________
freecodecamp: DSUC
abstract datatypes =  define data and operations
without being lost in implementation details

-logical view
-operations on ds
-cost of operations big O
-implementation as code


lists are literally static.
lists are inefficient when it gets filled.
when lists are filled, new memory block of size

not very efficient as memory consumption

linked list.
array is stored in contiguous 

33min
study list:
-array vs link list.
-doubly linked list
-stdlib functions in cpp.

____________________________________________________________________________
kubernetes 101.
https://cloud.google.com/learn/what-is-kubernetes

Docker container(izes) the application
kubernettes manages the container(ized) application.

kubernettes helps in:
increasing development speed
running services efficiciently
deploying applications anywhere

____________________________________________________________________________

Nvim shortcuts:
scrolling without cursor moving:
c+ u = up
c+ = up
c+ b = up

replacing text in : r or R
r for single char
R for multiple char in sentence 


use notion enhancer, on web and desktop
ctrl + alt + e for enhaner menu.
____________________________________________________________________________

OOPS in cpp:
constructor:
a method can be called in constructor even if it is declared later

everything without a modifier(public, private, protected) is public
by default.


-----------------------------------

encapsulation is hiding details 
encapsulation using getters and setters
data is private, 
getter and setter methods are in class public section
getter and setter methdods are public, they encapsulate data
data is accesed throuch getter and setter functions instead of directly.
getter and setter can be configured to provide access only to specific method.
constructors can also access private data


-----------------------------------

abstraction is hiding complex details on user's end
abstract class: serves as contract 
virtual function is in abstract class

normal class inherits the abstract class which contains pure virtual Functions


-----------------------------------
inheritance:
class child_class:public parent_class {

};

provide a constructor for derived class too, else it wont work
constructor in derived function should have new unique properties,
doesnt need to repeat parameters defined in parent class.
1:02:13
private access modifier gives access of variables to the child classes

inheritance needs access modifiers too

for accessing base class methods we need to have 
access modifiers public while inheriting the parent class methods
!:13:17

-----------------------------------

polymorphism:
method name is same across the classes, 
but perform different tasks when invoked

-----------------------------------
override is used with methods using virtual functions

make cpp calculator using oops// use switch case too
learn vector in cpp
learn stdlib functions

-----------------------------------
private variables can be accesed by public methods in same fucntion
class method cant be accessed when an object isnt initiated in
the int main method.

calling the function need to have brackets.

make a progress in linux terminal 
grepp
ssh programs

exec java in 

-----------------------------------
inline and internal css
<style> tag

everything on a website is in boxes
length and width can be altered of these boxes percentage

external css styles .css
<link rel='stylesheet' href='file location'>
in <head> tag, delete 

debug css code, chrome dev tools

-----------------------------------
gh package makes it easy for cd setup.
super easy

learn ci cd
typecasting: implicit(automatic),no data loss and explicit(data loss)

-----------------------------------
java variables: instance, class, local, parameters

input methods in java: cli, scanner class, buffer reader

yank block in vim is super useful , 
select visual block is ctrl+v
-----------------------------------
realtional operator
assignment operator java

where will learninig java take me next??

-----------------------------------
css selector, {class, tag, id selector}

-----------------------------------
SQLLLLL!!!

sql admin pass: Gourav5099!
sudo mysql -u root -p

dont forget caps lock and colon; in sql
USE QUOTES FOR STRING '' ALWAYS

STEPS TO START MYSQL SERVER::::
>> sudo mysql -u root -p
>> sudo password:
>> mysql password:
>> SHOW DATATBASES;
>> USE MYSQL;


-----------------------------------
write a bash script that cat all files
cat
mv 
cp

$name = varaible
echo doesnt need ""
echo "hello world"
is same as : echo hello world

echo $variable_name : prints the varaible
printf also works when more specific output is needed
formatting in printf is just like c

saving the output in different file
echo > file.tex
???
capture output and store it into a file

-----------------------------------
JAVA nowwww


-----------------------------------
grep is used to find specified string in a file or direcctory
grep is used for searching strings in files
can find in zipped files
can use regex, or regular expressions


-----------------------------------
making bash files, learning bash scripting
https://www.redhat.com/sysadmin/7-great-network-commands

man == manual, manual page
space for navigatiion

clear - x, saves history, scrolls up
ls -l same as lsa

learn YAML, type out networking resources
figure out how to opensource using CLI. 

-----------------------------------
setup mindsdb on the local device
learn mindsdb
figure out the integration issue

git remote -v == displays remote 

datree is a yaml validator that works with cli
gui is web based like jupyter

datree verifies yaml files, checks validity
setup datree cli
runs locally
has jupyter like web gui
has policies which can be modiffied along woth error messases
has history of validations done
has policy as code, exposts policies as yaml files
has integrations like helm

-----------------------------------
learn docker setup docker in the local machine
docker docs : https://docs.docker.com/get-started/

microservices
monolithic

rolling updates

orchestrestator deployoing and managing containers dynamically

cloud native applications meet certain demands
run on top of kubernetes

kubernettes api

runs on machine, loud
migrate it
cann replicate and scale
self healing
volumes
load balancing 
store secrets
not just orchestation

cncf owns kubernettes (donated by google)
kubernettes docs rnnnnn 

-----------------------------------
docker and kubernetes are written in GO
GO is a scalable programming lang made to write network services
good choice to develop cloud native applications

docker will make a go app run on system 
even if the go compiler isnt there

minikube lets run kubernetes on local machine with single node

-----------------------------------
bash scripting idea exce:

push the lsa result in other file, iterate through each line

command >> output.file
extenal file can have any extension .txt, .hdjfaslkdfj anything

ideas:
bash script to find a file

target is to make a script that does git pull --rebase origin 
for every folder in it

made a bash script that goes to hidden location or gets deleted after
execution

cd -  :makes you jump to previous working directory
cd ~  :makes you jump to home

ls -l

done closes the for loop

_____________________
inputs::::

user input : read var_name
access it: $var_name
_____________________
varaibles::::::

user input : read var_name
access it: $var_name

#!bin/bash executes file in bash 

prints out variable with other stuff ""

capture output of command in a variable: 
var_name=$(command)

default variables in shell e.g $USER
all caps variable are sysatem and enviorment names
env : enviorment variables

_____________________
maths::::::::

expr == evaluate an expression
every value needs 
expr $var + 222
expr $var1 + $var2 
/*
_____________________
if satatements:::::

fi closes if statement
send text editor to background
-eq === equal
-ne === not equal
-gt === 
-f === check file


if [condition]
then
        echo
else
        echo
fi


always remember to enclose if with fi

_____________________
what does the bin folder contain???
/usr/bin/app
apps and commands are essentially files

if command -v $any command var
checks if command exists

text command are condition or tests like equal or less etc

grep command
_____________________
test:::::

no space between command=and

test -e filename // tests if file exists or not
[ -e filename] //used with if statement

test -f foldername // tests if file exists or not

if it doesnt work it always have work arounds

_____________________
iterating through folders in a direcctory:

for folder in ~/location/*/
do
    if [ -e ] 
    echo $folder
done

*tips*
dont forget the wildcard * == all occuraneces 
loa/d/d/dd/*

dont foeget to check if variable a file or not
if [ -d "$file" ] #has to be exactly like this

dont forget to enclose for with done
if with fi

dont forget to add :::
if 
then
   satatement
fi

for
do
   satatement
done


man test for help


_____________________
ideas::::::

bash script to find a file

target is to make a script that does git pull --rebase origin 
for every folder in it


_____________________
exit codes:::::


osint:: opensource inteligence for twitter
network sniffing

router and switch
nmap
wireshark
ettercap
arp poisininig
man in the middle attack

where puthon3

robbyrussel theme


ls -R ::::::: recursive lists folder in file in folder ......
cat > file.txt streams output to other file
tunneling
it also creates the file if it doesnt exist

command | command1 

mkdir -p 

explore cat commands

if elif else ladder exists in bash

_____________________
cd - >>>> switces between directories quickly
          back and forth

_____________________
exit codes::::::
0 = success

echo $?
shows the exit code of the command entered
0 == successful execution 
any other number == failure


exit codes can be explicitly mentioned
eg exit code for executing hello world
exit <code>
once exit code ecxplicitly mentioned command literally exits
no line under exit command gets executed


make a bash script to install vs code on any distro


daw == deletes the word all together

caw == deletes the word altogether and puts in insert mode



is bash indented language


IO redirection
<,>>,>,| 

make a bash script that updates github
uploads all files when executed
if empty commit then add a blank file to commit


while loop is generally used for menus
it runs over and over again until the condition is met

man test

mind the spaces in bash
its extremely space sensetive

Ctrl+Z suspends jobs in background in bash
can access it using jobs
Ctrl+C closes the task

jobs

swich back and forth using fg and Ctrl+Z


when pasing parameters using $var, ~/home/location doesnt work,
use full locations

_____________________
echo ::::

$var : var can also be 
$(command)

echo "hello $var world"
echo "hello $(command) world"

find commad, finds files
grep prints lines that matches the pattern

check changes in file
-mtime
-mmin
-newermt

check distro in linux:

any one of the commnands
$ cat /etc/os-release
$ lsb_release -a
$ hostnamectl

Linux Kernel version
$ uname -r

grep filters out output for useful stuff


saving tmux enviorment:
Ctrl+b + Ctrl+s

grep -q
if[] is used for test command
if command is used for normal commands, no brackets needed

or satement ||
and satement &&


____________________________________________________________________
11/4/23
exceptions in java:
handled by handler (jvm)

handler: default handler (jvm)
         exception handler (defined by dev)

default handler, handled by jvm, as exception handler isnt explicitly defined

exception handling methods:
- try catch 
- try with multiple catch
- nested try
- try with finally block
- try catch finally
- custom exception  


try catch :

try
{
        //code with exception
} 

catch(TypeException object)
{
        //code to handle exception
}

exception types:
ArithmaticException
ArrayIndexOutOfBounds
shit like that

telescope plugin
space + ? searches within the file
space + space searches the recent files
sh = search help
sw = search word
ctrl + space

nivm treesitter
10Vex nvim file explorer

_________________________________________________
catch  Exception //

Custom exception:
exception else than the java library

public string to String
Throwable.getCause(){
        Cause of exception
}
String getMessage(){
        message
}


throw: keyword is used to manually throw an exception
to be caught by catch
unchecked
in try block
for logical error

throws: checked exception
used with method signature
for io error

wap to give insufficient funds exception that will occur when an user
tries to withdraw more money than account

multithreading

deadlock:
        


  

Strings
Java strings are sequence of character, they are objeects of type string
Java strings are immutable

Creating Strings :
        -using string literal: less memory consumed
        all string have one object

        String str1= new String(data);
        

        -using string class: memory inefficient 

String Methods:
        length(): returns number of character in a string
        + operator:  String 
        char charAt(int index): returns character from a string
        equals()
        equalsIsIgnoreCase():
        startsWith(): if string starts with 
        endsWith(): if string ends with

        compareTo(): compares two strings 
                public int compareTo(String1 String2)
                compares using ASCII values

        compareToIgnoreCase():
                public int compareToIgnoreCase(String1 String2):

        indexOf: Searches the first occuance of character or substring, 
                 Returns -1 if the character doesn't

        substring(): slices string
                "alphabetstring".substring(1,5)

        
